<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>FairyCode | Welcome to Seay0&apos;s Place !</title>
    <description>Welcome to Seay0&apos;s Place !</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 11 Apr 2023 09:57:10 +0900</pubDate>
    <lastBuildDate>Tue, 11 Apr 2023 09:57:10 +0900</lastBuildDate>
    <generator>Jekyll v3.9.3</generator>
    
      <item>
        <title>Proxy server &amp;#35;2 / TIL</title>
        <description>&lt;h1 id=&quot;proxy-server&quot;&gt;&lt;strong&gt;Proxy Server&lt;/strong&gt;&lt;/h1&gt; &lt;p&gt;내 컴퓨터를 origin 서버의 리버스 프록시 서버로 만드는 실습을 해보자 ! (캐싱 기능을 포함한 프록시 서버를 작성해야 한다.)&lt;/p&gt; &lt;p&gt;먼저 프록시 서버를 만들기 위해서 /etc/nginx/nginx.conf 파일을 sudo 권한으로 다음과 같이 수정한다.&lt;/p&gt; &lt;div class=&quot;language-nginx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;listen&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10026&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;server_name&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;localhost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;proxy_pass&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;http://3.39.193.36:8080&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# nginx가 요청을 프록시 해야하는 업 스트림 서버의 URL이다.&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;proxy_set_header&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;myname&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;devops-04-OSeaYeon&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# my name이라는 사용자 지정 헤더를 설정하고 &quot; &quot; 안의 값을 할당한다.&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;proxy_set_header&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;X-Real-IP&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$remote_addr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span...</description>
        <pubDate>Sun, 09 Apr 2023 21:00:00 +0900</pubDate>
        <link>http://localhost:4000/Proxy-server-2-TIL/</link>
        <guid isPermaLink="true">http://localhost:4000/Proxy-server-2-TIL/</guid>
        
        <category>proxy server</category>
        
        <category>DevOps BootCamp</category>
        
        <category>DevOps Bootcamp</category>
      </item>
    
      <item>
        <title>Proxy server &amp;#35;1 / TIL</title>
        <description>&lt;h1 id=&quot;proxy-server&quot;&gt;&lt;strong&gt;Proxy Server&lt;/strong&gt;&lt;/h1&gt; &lt;ul&gt; &lt;li&gt;원 서버를 대리하여 통신하며 중계 역할을 한다. &lt;ul&gt; &lt;li&gt;캐시, 로드밸런서, 보안 등&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;프록시 서버를 보는 입장&lt;/strong&gt; &lt;ul&gt; &lt;li&gt;클라이언트 입장 : 서버라고 인식&lt;/li&gt; &lt;li&gt;서버 입장 : 클라이언트라고 인식&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;웹 서버에서는 클라이언트의 IP를 숨겨 프라이버시를 강화하는 데 사용할 수 있다.&lt;/li&gt; &lt;li&gt;서버로부터 응답을 압축하여 네트워크 대역폭을 줄이고 성능을 향상 시킨다.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/duruq2coh/image/upload/v1681095463/gitio/post/proxy/1_pnzeqp.png&quot; alt=&quot;proxy&quot; /&gt;&lt;/p&gt; &lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;포워드 프록시 (forward proxy)&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;일반적인 프록시로 클라이언트-서버 구조에서 &lt;strong&gt;클라이언트 쪽&lt;/strong&gt;을 대리한다.&lt;/li&gt; &lt;li&gt;클라이언트에서 서버로 리소스를 요청할 때 직접 요청하지 않고 &lt;strong&gt;프록시 서버를 거쳐서 요청&lt;/strong&gt;한다.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;리버스 프록시 (reverse proxy)&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;애플리케이션 서버의 앞&lt;/strong&gt;에 위치하여 클라이언트가 서버에...</description>
        <pubDate>Sun, 09 Apr 2023 21:00:00 +0900</pubDate>
        <link>http://localhost:4000/Proxy-server-1-TIL/</link>
        <guid isPermaLink="true">http://localhost:4000/Proxy-server-1-TIL/</guid>
        
        <category>proxy server</category>
        
        <category>DevOps BootCamp</category>
        
        <category>DevOps Bootcamp</category>
      </item>
    
      <item>
        <title>Linux &amp;#35;3 / TIL</title>
        <description>&lt;p&gt;&lt;strong&gt;1. 프로세스 관리&lt;/strong&gt;&lt;br /&gt; &lt;strong&gt;2. 서비스 관리&lt;/strong&gt;&lt;br /&gt; &lt;strong&gt;3. 자동화&lt;/strong&gt;&lt;/p&gt; &lt;hr /&gt; &lt;h2 id=&quot;프로세스-관리&quot;&gt;&lt;strong&gt;프로세스 관리&lt;/strong&gt;&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;프로그램 :&lt;/strong&gt; 사용자가 원하는 일을 처리 할 수 있도록 프로그래밍 언어를 사용하여 수행 절차를 표현해놓은 명령어들의 집합, 코드 / 정적인 파일 상태&lt;/li&gt; &lt;li&gt;&lt;strong&gt;프로세스 :&lt;/strong&gt; 실행되고 있는 프로그램, 프로그램은 운영체제로부터 실행에 필요한 메모리를 할당 받아 코드를 실행한다.&lt;/li&gt; &lt;li&gt;하나의 프로그램은 여러개의 프로세스를 만들 수 있다. (다중 프로세스)&lt;/li&gt; &lt;li&gt;&lt;strong&gt;스레드 :&lt;/strong&gt; 프로세스 안에서 코드가 실행되는 흐름&lt;/li&gt; &lt;li&gt;&lt;strong&gt;멀티 스레드 :&lt;/strong&gt; 애플리케이션 내부의 멀티 태스킹 (멀티 프로세스 : 애플리케이션 단위)&lt;br /&gt; - 대용량 데이터의 처리시간을 줄이기 위해 데이터를 분할하여 병렬로 처리한다.&lt;br /&gt; - UI를 가지고 있는 애플리케이션에서 네트워크 통신을 하기...</description>
        <pubDate>Mon, 13 Mar 2023 21:00:00 +0900</pubDate>
        <link>http://localhost:4000/Linux-3-TIL/</link>
        <guid isPermaLink="true">http://localhost:4000/Linux-3-TIL/</guid>
        
        <category>linux</category>
        
        <category>DevOps BootCamp</category>
        
        <category>DevOps Bootcamp</category>
      </item>
    
      <item>
        <title>Linux &amp;#35;2 / TIL</title>
        <description>&lt;p&gt;&lt;strong&gt;1. 표준 스트림 / 파이프라인 / 리다이렉션&lt;/strong&gt;&lt;br /&gt; &lt;strong&gt;2. 출력 관련 명령어&lt;/strong&gt;&lt;br /&gt; &lt;strong&gt;3. 관리자로서의 리눅스 / 권한&lt;/strong&gt;&lt;/p&gt; &lt;hr /&gt; &lt;h2 id=&quot;표준-스트림--파이프라인--리다이렉션&quot;&gt;&lt;strong&gt;표준 스트림 / 파이프라인 / 리다이렉션&lt;/strong&gt;&lt;/h2&gt; &lt;h3 id=&quot;표준-스트림&quot;&gt;&lt;strong&gt;표준 스트림&lt;/strong&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;일반적으로 작동하는 프로그램은 실행 시, 세 개의 *스트림이 자동으로 열리고, 이를 표준 스트림이라고 한다.&lt;/li&gt; &lt;li&gt;리눅스의 &lt;strong&gt;/dev 디렉토리&lt;/strong&gt;에서 아래의 형태로 세 개의 표준 스트림을 담고 있다.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;입력을 위한 스트림 (표준 입력) : Standard Input, STDIN, 0&lt;/strong&gt;&lt;br /&gt; - 입력값의 데이터(보통은 문자열) 스트림. 표준 입력 설정이 키보드로 되어 있는데, 모든 프로그램이 입력을 요구하지 않으며, 대표적인 예로는 비밀번호를 입력할 때 표준 입력 스트림을 사용한다.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;출력을 위한 스트림 (표준 출력) : Standard Output,...</description>
        <pubDate>Fri, 10 Mar 2023 21:00:00 +0900</pubDate>
        <link>http://localhost:4000/Linux-2-TIL/</link>
        <guid isPermaLink="true">http://localhost:4000/Linux-2-TIL/</guid>
        
        <category>linux</category>
        
        <category>DevOps BootCamp</category>
        
        <category>DevOps Bootcamp</category>
      </item>
    
      <item>
        <title>Linux &amp;#35;1 / TIL</title>
        <description>&lt;p&gt;세계 상위 100만대 서버 중 96.3%는 &lt;strong&gt;리눅스&lt;/strong&gt;에서 실행된다. 서버 시장에서 리눅스를 선택한 이유는 무엇일까 ?&lt;/p&gt; &lt;hr /&gt; &lt;h2 id=&quot;리눅스&quot;&gt;리눅스&lt;/h2&gt; &lt;h3 id=&quot;리눅스를-많이-사용하는-이유&quot;&gt;리눅스를 많이 사용하는 이유&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;오픈소스&lt;/strong&gt; : 제품을 별도의 비용 없이 사용할 수 있고, 공개 된 소스 코드들이 존재한다.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;보안성&lt;/strong&gt; : 오픈소스라고 하면 보안에 취약할 것이라고 생각할 수 있지만, 오히려 투명하게 공개되어 있기 때문에 다양한 취약점을 빠르게 파악할 수 있다.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;안정성&lt;/strong&gt; : *업 타임이 기타 OS보다 월등히 길다. 때문에 장시간 동안 안정적으로 작동하기 때문에 중요한 데이터 및 애플리케이션을 안전하게 보호할 수 있다. 따라서, 높은 가용성을 요구하는 서비스의 경우 리눅스의 사용이 적합하다.&lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;이식성&lt;/strong&gt; : 다양한 하드웨어와 소프트웨어 환경에서에서 작동이 가능하다....</description>
        <pubDate>Wed, 08 Mar 2023 21:00:00 +0900</pubDate>
        <link>http://localhost:4000/Linux-1-TIL/</link>
        <guid isPermaLink="true">http://localhost:4000/Linux-1-TIL/</guid>
        
        <category>linux</category>
        
        <category>DevOps BootCamp</category>
        
        <category>DevOps Bootcamp</category>
      </item>
    
  </channel>
</rss>
